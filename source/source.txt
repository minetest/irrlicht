Source code of the Irrlicht Engine

The complete source of the Irrlicht Engine can be found in this directory. 
Please note that YOU DO NOT NEED THIS SOURCE to develop 3d applications with
the Irrlicht Engine. Instead, please use the .dll in the \bin directory, the 
.lib in the \lib directory and the header files in the \include directory.

You will find a good tutorial how to set up your development environment and to
use the engine in the \examples directory. (Try 01.helloworld)

The source of the engine is included because for the following reasons:

	- To let developers be able to debug the engine.
	- To let developers be able to make changes to the engine.
	- To let developers be able to compile their own versions of the engine.
	
	
	
HOW TO COMPILE THE ENGINE WITH LINUX

If you wish to compile the engine for Linux yourself, run a 'make' in the
folder 'source/Irrlicht'. After this, you should be able to make all example
applications in examples. Then just run them from the directory where they are
built.
For the necessary compiler and linker flags please check the provided Makefiles
in the examples directories.

Only the Software Drivers and the Null Driver will work on all Linux machines,
while OpenGL support requires either GLX support of the X11 server (try glxinfo)
or a software OpenGL solution such as Mesa.

If you get a compiling/linking problem like 

 undefined reference to `glXGetProcAddress'
 
This is a problem introduced by the NVidia drivers. There are several solutions:
A) Update your drivers. All versions with GLX 1.4 support (i.e. beginning with
  12/2005) will work.
B) Define the symbol _IRR_GETPROCADDRESS_WORKAROUND_ during compilation of
   COpenGLDriver.cpp, either by adding it to the compiler command line or by
   uncommenting the line defining this symbol inside the OpenGL driver source.
   This will force the use of glXGetProcAddressARB which has better chances to
   work on older systems.

If you get compiling or runtime problems regarding XF86VidMode, Xxf86vm.so, or
the XFree86 VidMode extension you have also several solutions:
A) Install the extension for your X server or the developer package in case of
   compiler/linker problems.
B) Disable the VidMode usage by disabling the define _IRR_LINUX_X11_VIDMODE_ in
   include/IrrCompileConfig.h
   In this case you might give the RandR extension a try (by enabling the
   next define in that file) which also provides fullscreen support under Linux.
   If both extensions fail you won't have fullscreen support for Irrlicht.
